<?xml version="1.0"?>
<launch>

  <!-- Map server -->
  <arg name="map_file" default="$(find udacity_bot)/maps/jackal_race.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Place map frame at odometry frame -->
  <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster"
      args="0 0 0 0 0 0 map odom 100"/>

  <!-- Localization-->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    rosparam set use_sim_time true

    <remap from="scan" to="udacity_bot/laser/scan"/>

    <!-- Time with which to post-date the transform that is published, to
    indicate that this transform is valid into the future. -->
    <param name="transform_tolerance" value="0.1" /> <!-- 0.1 -->

    <!-- Allowed number of particles -->
    <param name="min_particles" value="50"/> <!-- 500 -->
    <param name="max_particles" value="500"/> <!-- 5000 -->

    <!-- Translational (d), rotational (a) movement required before performing
    a filter update. -->
    <!-- lower values impacts how accurate the particles are predicted to the actual bots position -->
    <param name="update_min_d" value="0.05"/> <!-- 0.2 -->
    <param name="update_min_a" value="0.1"/> <!-- Ï€/6.0 radians 0.5236 -->

    <!-- Number of filter updates required before resampling. -->
    <param name="resample_interval" value="1"/> <!-- 2 -->

    <!-- Initial pose mean (x & y), used to initialize filter with Gaussian distribution. -->
    <param name="initial_pose_x" value="0.0"/> <!-- 0.0 -->
    <param name="initial_pose_y" value="0.0"/> <!-- 0.0 -->

    <!-- Maximum rate (Hz) at which scans and paths are published for
    visualization, -1.0 to disable. -->
    <param name="gui_publish_rate" value="-1"/> <!-- -1 -->

    <!-- When set to true, AMCL will subscribe to the map topic rather than
    making a service call to receive its map.  -->
    <param name="use_map_topic" value="false"/> <!-- false -->

    <!-- When set to true, AMCL will only use the first map it subscribes to,
    rather than updating each time a new one is received. -->
    <param name="first_map_only" value="false"/> <!-- false -->

    <!-- Laser parameters -->
    <!-- Scan range to be considered; -1.0 will cause the laser's reported minimum
    range to be used. -->
    <param name="laser_min_range" value="-1"/> <!-- -1 -->
    <param name="laser_max_range" value="-1"/> <!-- -1 -->

    <!-- How many evenly-spaced beams in each scan to be used when updating the filter. -->
    <param name="laser_max_beams" value="50"/> <!-- 30 -->

    <!-- Mixture weight for the z_xxx part of the model. -->
    <param name="laser_z_hit" value="0.95"/> <!-- 0.95 -->
    <param name="laser_z_short" value="0.1"/> <!-- 0.1 -->
    <param name="laser_z_max" value="0.05"/> <!-- 0.05 -->
    <param name="laser_z_rand" value="0.05"/> <!-- 0.05 -->

    <!-- Standard deviation for Gaussian model used in z_hit part of the model. -->
    <param name="laser_sigma_hit" value="0.2"/> <!-- 0.2 -->

    <!-- Exponential decay parameter for z_short part of model. -->
    <param name="laser_lambda_short" value="0.1"/> <!-- 0.1 -->

    <!-- Which model to use, either beam, likelihood_field, or likelihood_field_prob
    (same as likelihood_field but incorporates the beamskip feature, if enabled). -->
    <param name="laser_model_type" value="likelihood_field"/> <!-- likelihood_field -->

    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model. -->
    <param name="laser_likelihood_max_dist" value="1.0"/> <!-- 2.0 -->

    <!-- Odometry model parameters -->
    <!-- Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected". -->
    <param name="odom_model_type" value="diff-corrected"/> <!-- diff -->

    <!-- Specifies the expected noise in odometry's rotation estimate from the
    rotational component of the robot's motion. -->
    <param name="odom_alpha1" value="0.2"/> <!-- 0.2 -->
    <param name="odom_alpha2" value="0.2"/> <!-- 0.2 -->
    <param name="odom_alpha3" value="0.2"/> <!-- 0.2 -->
    <param name="odom_alpha4" value="0.2"/> <!-- 0.2 -->
    <!-- Translation-related noise parameter (only used if model is "omni"). -->
    <param name="odom_alpha5" value="0.2"/> <!-- 0.2 -->

    <!-- Which frame to use for odometry. -->
    <param name="odom_frame_id" value="odom"/> <!-- odom -->

    <!-- Which frame to use for the robot base -->
    <param name="base_frame_id" value="robot_footprint"/> <!-- base_link -->

    <!-- The name of the coordinate frame published by the localization system -->
    <param name="global_frame_id" value="map"/> <!-- map -->

    <!-- Set this to false to prevent amcl from publishing the transform between
    the global frame and the odometry frame. -->
    <param name="tf_broadcast" value="true"/> <!-- true -->

    <!-- <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/> -->

  </node>

  <!-- Move base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find udacity_bot)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find udacity_bot)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find udacity_bot)/config/base_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="udacity_bot/laser/scan"/>

    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

  </node>


</launch>
